{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ceilon/Desktop/MySite/context/theme.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useCallback, useEffect, useContext } from 'react';\nvar ThemeContext = /*#__PURE__*/createContext({});\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(),\n      chosedTheme = _useState[0],\n      setChosedTheme = _useState[1];\n\n  var _useState2 = useState(false),\n      lockScroll = _useState2[0],\n      setLockScroll = _useState2[1];\n\n  var _useState3 = useState(chosedTheme),\n      theme = _useState3[0],\n      setTheme = _useState3[1];\n\n  useEffect(function () {\n    function fetchTheme() {\n      var theme = localStorage.getItem('@andre:theme'); // @ts-ignore\n\n      setChosedTheme(theme);\n    }\n\n    fetchTheme();\n  }, []);\n  var changeTheme = useCallback(function () {\n    if (theme === 'dark') {\n      setTheme('light');\n      localStorage.setItem('@andre:theme', 'light');\n      console.log(theme);\n    } else {\n      setTheme('dark');\n      localStorage.setItem('@andre:theme', 'dark');\n      console.log(theme);\n    }\n  }, [theme]);\n  var lock = useCallback(function (lockBool) {\n    if (lockBool) {\n      setLockScroll(!lockScroll);\n    } else {\n      setLockScroll(lockBool);\n    }\n  }, [lockScroll]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      changeTheme: changeTheme,\n      lockScroll: lockScroll,\n      lock: lock\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ThemeProvider, \"mUCCm0H/zmyNHzoTH9SG4CGTitU=\");\n\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n\n  var context = useContext(ThemeContext);\n  return context;\n}\n\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/home/ceilon/Desktop/MySite/context/theme.tsx"],"names":["React","createContext","useState","useCallback","useEffect","useContext","ThemeContext","ThemeProvider","children","chosedTheme","setChosedTheme","lockScroll","setLockScroll","theme","setTheme","fetchTheme","localStorage","getItem","changeTheme","setItem","console","log","lock","lockBool","useTheme","context"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IACEC,aADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,UALF,QAMO,OANP;AAeA,IAAMC,YAAY,gBAAGL,aAAa,CAAmB,EAAnB,CAAlC;AAEA,OAAO,IAAMM,aAAuB,GAAG,SAA1BA,aAA0B,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACjBN,QAAQ,EADS;AAAA,MAChDO,WADgD;AAAA,MACnCC,cADmC;;AAAA,mBAEnBR,QAAQ,CAAC,KAAD,CAFW;AAAA,MAEhDS,UAFgD;AAAA,MAEpCC,aAFoC;;AAAA,mBAG7BV,QAAQ,CAACO,WAAD,CAHqB;AAAA,MAGhDI,KAHgD;AAAA,MAGzCC,QAHyC;;AAKvDV,EAAAA,SAAS,CAAC,YAAM;AACd,aAASW,UAAT,GAAsB;AACpB,UAAMF,KAAK,GAAGG,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd,CADoB,CAEpB;;AACAP,MAAAA,cAAc,CAACG,KAAD,CAAd;AACD;;AAEDE,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT;AAUA,MAAMG,WAAW,GAAGf,WAAW,CAAC,YAAM;AACpC,QAAIU,KAAK,KAAK,MAAd,EAAsB;AACpBC,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACAE,MAAAA,YAAY,CAACG,OAAb,CAAqB,cAArB,EAAqC,OAArC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,KAJD,MAIO;AACLC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACAE,MAAAA,YAAY,CAACG,OAAb,CAAqB,cAArB,EAAqC,MAArC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD;AACF,GAV8B,EAU5B,CAACA,KAAD,CAV4B,CAA/B;AAYA,MAAMS,IAAI,GAAGnB,WAAW,CACtB,UAACoB,QAAD,EAAuB;AACrB,QAAIA,QAAJ,EAAc;AACZX,MAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,CAACW,QAAD,CAAb;AACD;AACF,GAPqB,EAQtB,CAACZ,UAAD,CARsB,CAAxB;AAWA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAALA,KAAF;AAASK,MAAAA,WAAW,EAAXA,WAAT;AAAsBP,MAAAA,UAAU,EAAVA,UAAtB;AAAkCW,MAAAA,IAAI,EAAJA;AAAlC,KAA9B;AAAA,cACGd;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CA3CM;;GAAMD,a;;KAAAA,a;AA6Cb,OAAO,SAASiB,QAAT,GAAsC;AAAA;;AAC3C,MAAMC,OAAO,GAAGpB,UAAU,CAACC,YAAD,CAA1B;AAEA,SAAOmB,OAAP;AACD;;IAJeD,Q","sourcesContent":["import React, { \n  createContext, \n  useState, \n  useCallback, \n  useEffect, \n  useContext \n} from 'react';\n\ninterface ThemeContextData {\n  theme: 'light' | 'dark';\n  changeTheme(): void;\n  lockScroll: boolean;\n  lock(lockBool: boolean): void;\n}\n\nconst ThemeContext = createContext<ThemeContextData>({} as ThemeContextData);\n\nexport const ThemeProvider: React.FC = ({ children }) => {\n  const [chosedTheme, setChosedTheme] = useState<'light' | 'dark'>();\n  const [lockScroll, setLockScroll] = useState(false);\n  const [theme, setTheme] = useState(chosedTheme);\n\n  useEffect(() => {\n    function fetchTheme() {\n      const theme = localStorage.getItem('@andre:theme');\n      // @ts-ignore\n      setChosedTheme(theme);\n    } \n\n    fetchTheme()\n  }, [])\n\n  const changeTheme = useCallback(() => {\n    if (theme === 'dark') {\n      setTheme('light');\n      localStorage.setItem('@andre:theme', 'light');\n      console.log(theme);\n    } else {\n      setTheme('dark');\n      localStorage.setItem('@andre:theme', 'dark');\n      console.log(theme)\n    }\n  }, [theme]);\n\n  const lock = useCallback(\n    (lockBool: boolean) => {\n      if (lockBool) {\n        setLockScroll(!lockScroll);\n      } else {\n        setLockScroll(lockBool);\n      }\n    },\n    [lockScroll],\n  );\n\n  return (\n    <ThemeContext.Provider value={{ theme, changeTheme, lockScroll, lock }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport function useTheme(): ThemeContextData {\n  const context = useContext(ThemeContext);\n\n  return context;\n}"]},"metadata":{},"sourceType":"module"}